#!/usr/bin/rakudo

# vim: ft=perl6

my $here = $*PROGRAM-NAME.IO.parent;
my $repo-root = $here.add('..');

my $version_rs_file = $repo-root.add('src/version.rs');
my $deb_building_dir = $repo-root.add('deb-building');
my $exe_source = $repo-root.add('target/x86_64-unknown-linux-gnu/release/totalmapper');

my $tree_root = $deb_building_dir.add('totalmapper');
my $control_file = $tree_root.add('DEBIAN/control');
my $exe_sink = $tree_root.add('usr/bin/totalmapper');

my $version;
given slurp $version_rs_file {
  when /pub\sconst\sVERSION\:\s\&str\s\=\s\"(.*)\"\;/ { $version = $0; }
  default { die "Didn't match" }
}

run <cargo build --release --target x86_64-unknown-linux-gnu>, cwd => $repo-root;

$exe_sink.parent.mkdir;
$exe_source.copy: $exe_sink;

my $installed_size_text = (run <du -s>, $tree_root, :out).out.slurp(:close);
unless ($installed_size_text.match: /\s*(\d+)<|w>.*/) { die("Didn't match") }
my $installed_size = $0;

my $control_content = qq:to/END/;
Package: totalmapper
Version: $version
Section: custom
Priority: optional
Architecture: amd64
Essential: no
Installed-Size: $installed_size
Maintainer: owen\@owenehealy.com
Description: The totalmapper keyboard layout mapper
END

$control_file.parent.mkdir;
my $control_fh = open $control_file, :w;
$control_fh.print($control_content);
$control_fh.close;

run <dpkg-deb --build totalmapper>, cwd => $deb_building_dir;

my $release = q:x/lsb_release -c -s/.trim;

my $deb_source_file = $deb_building_dir.add('totalmapper.deb');
my $deb_sink_file = $deb_building_dir.add("totalmapper_{$version}-{$release}_amd64.deb");
$deb_source_file.move($deb_sink_file);

